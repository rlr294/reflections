How did viewing a diff between two versions help you spot the bug?
The FC command brought up only the differences and filtered out all the code that was not changed.  
This allowed quick and efficient comparisons between the two verisons and made it easy to spot the 
typo causing the bug.

How could having easy access to the entire history of a file make you a more efficient programmer 
in the long term?
When bugs arrise on a previously working section of code you can either roll back to a previous
version or compare your current version with a previous version to discover where the error
arose from.

What do you think are the pros and cons of manually choosing when to create a commit, like you do 
in Git, vs having versions automatically saved, like Google Docs does?
By manually chosing when commits are created commits will be made at logical steps.  In a system 
like Google Docs saved versions may be created in the middle of typing a line or implementing 
something, meaning the code in that saved version may not compile or function.

How can you use the commands git log and git diff to view the history of files?
Entering the command git log will print out the commit history of the repository you are currently
in.  You can then use the git diff command along with two commit IDs to compare those two commits.

Why do you think some version control systems, like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?
Git was designed with coding in mind, where often multiple files need to interact together to
perform what they are designed to do.  Google Docs is designed for a different purpose, primarily 
text editing, where usually a file is stand alone rather than being interrelated with other files.

How might using version control make you more confident to make changes that could break something?
By using version control you have access to your previously working code. Even if you accidentally 
break something you can easily revert to the working version of the code prior to you changes.

Now that you have your workspace set up, what do you want to try using Git for?
Using version control to keep track of changes to my projects I work on for school and work.