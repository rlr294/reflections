What happens when you initialize a repository? Why do you need to do it?
The .git directory is added to the repository, allowing git to track the 
history of the repository since it was created.  It also gives you the 
ability to use the various git commands on the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The staging area is an area where you can add files that you want to be committed 
to your repository; it is an intermediary step.  This allows you to have files 
within your working directory that are not committed to the repository.

How can you use the staging area to make sure you have one commit per logical change?
You can put any files that were updated to make this single logical change, then use
the git diff --staged command to check exactly what will be changed when you commit
compared to the current repository.

What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?
Branches are useful when you want to make a change to a repository, but still
keep the original repository as its own functioning version. For example, if
you wanted to create a version of your program in a different language you would
create a new branch.

How do the diagrams help you visualize the branch structure?
They give you a clear view of exactly where each branch connects to previous commits,
by connecting them to their parent commits.
