When would you want to use a remote repository rather than keeping all your work local?
When you are working with other people on a project or you are working on a project
from multiple computers.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?
Someone else may push something to GitHub while you're working on a file in that repository.
If it automatically stayed up-to-date it may overwrite some of the changes you have made.

Describe the differences between forks, clones, and branches. When would you use one instead
of another?
Forking a repository creates a clone of it on the GitHub servers under your username.
This is useful when you want to make changes to someone else's project and they want to
keep their project how it is.
Cloning creates a copy of a repository on your computer.
Useful for bringing a project to a new computer or obtaining files after forking.
Branching makes a new line of commits that will not overwrite other branches.
Useful for making changes to your program that are experimental or do not belong in
the main branch.

What is the benefit of having a copy of the last known state of the remote stored locally?
When attempting to push or pull from the remote Git knows what changes have been made to the
remote since you last interacted with it.

How would you collaborate without using Git or GitHub? What would be easier, and what would
be harder?
You would need to directly share your code with collaborators, likely giving them a zip file
with all the necessary files compressed in it. Whenever someone made a change it would need to
be manually merged into the master, a time consuming process.  Then the updated master would
need to be redistributed to all collaborators again.  This would be much harder than using Git
and GitHub.
